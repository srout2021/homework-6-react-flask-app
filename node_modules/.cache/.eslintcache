[{"C:\\Users\\rout\\customapphomework5\\src\\index.js":"1","C:\\Users\\rout\\customapphomework5\\src\\reportWebVitals.js":"2","C:\\Users\\rout\\customapphomework5\\src\\App.js":"3"},{"size":538,"mtime":1665433459622,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1665287733995,"results":"6","hashOfConfig":"5"},{"size":5956,"mtime":1666624128977,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"pqw5d6",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\rout\\customapphomework5\\src\\index.js",[],[],[],"C:\\Users\\rout\\customapphomework5\\src\\reportWebVitals.js",[],[],"C:\\Users\\rout\\customapphomework5\\src\\App.js",["19","20"],[],"import './App.css';\nimport React from 'react'\nimport {useState, useEffect} from 'react'\n//import fetch from 'fetch'\n/*\nimport { Button } from '@mui/material';\n(MUI Package was not properly interfacing in recitation) */\n\n/* Implemented at least 2 components other than the Projects component in HardwareSet and Button*/\n/* Reused HardwareSet component multiple times within the Projects component to further modularize the project*/\n/* Used custom event handling to change the state of initNum and startNum in order to properly update the available units*/\nfunction HardwareSet(props){\n  const [initNum, setNum] = useState();\n  const [startNum, newNum] = useState(100);\n  const HWSetName = props.number;\n  //const projectName = props.projectNum;\n  const [info, setInfo] = useState([{}]);\n  useEffect(() => {\n      fetch(\"/checkIn\", {mode:\"no-cors\"}).then(res => res).then(info => setInfo(info), console.log(info)).catch(error => console.log('Error Present', error))\n  }, []);\n  const changeValue = (event) => {\n    setNum(parseInt(event.target.value));\n  };\n  const incValue = (e) => {\n    e.preventDefault();\n    if ((initNum+startNum)>100){\n      newNum(100);\n      alert(initNum + \" hardware checked in but maxed at 100 for HW Set \" + HWSetName);\n    }\n    else {\n      newNum(initNum+startNum);\n      alert(initNum + \" hardware checked in for HW Set \" + HWSetName);\n    }\n  };\n  const decValue = (e) => {\n    e.preventDefault();\n    if ((startNum-initNum)<0){\n      newNum(0);\n      alert(initNum + \" hardware checked out but reduced to 0 for HW Set \" + HWSetName);\n    }\n    else {\n      newNum(startNum-initNum);\n      alert(initNum + \" hardware checked out for HW Set \" + HWSetName);\n    }\n  };\n  return(\n    <header>\n      <form className = 'customheader'> HW Set {props.number}: {startNum}/{props.initsize}\n        <label> \n        <input type = \"number\" min = {0} max = {props.initsize} placeholder = {props.title}  onChange = {changeValue} value = {initNum}/>\n        </label>\n        <button className = 'in' onClick = {incValue}>Check In</button>\n        <button className = 'out' onClick = {decValue}>Check Out</button>\n      </form>\n    </header>\n  )\n}\n\n/* Implemented at least 2 components other than the Projects component in HardwareSet and Button*/\n/* Reused Button component multiple times within the Projects component to further modularize the project*/\n/* Used component Button to have custom event handler to change state of button from Join to Leave */\n/* Pass props of project numbers and list the projects that you can access*/\nfunction CustomButton(props){\n  const [btnName, setName] = useState(false);\n  const projectName = props.projectNum;\n  const [info, setInfo] = useState([{}]);\n  useEffect(() => {\n      fetch(\"/join\", {mode:\"no-cors\"}).then(res => res.json).then(info => setInfo(info), console.log(info)).catch(error => console.log('Error Present', error))\n  }, []);\n  const changeName = (e) => {\n    e.preventDefault();\n    setName(!btnName);\n    if (btnName === true){\n      e.preventDefault();\n      // Send projectName here\n      alert(\"Left Project \" + projectName);\n    }\n    else if (btnName === false){\n      e.preventDefault();\n      // Send projectName here\n      alert(\"Joined Project \" + projectName);\n    }\n  };\n  return (\n    <button onClick={changeName} style = {{backgroundColor:  'orange'}}>\n      {`${btnName ? 'Leave' : 'Join'}`}\n    </button>\n  );  \n}\n\n/* Passed props from parent to child twice (App passed props to Projects and Projects passed props to HardwareSet)*/\n/* Also passed props from parent to child again when Projects passed props to Button */\nfunction Projects(props) {\n  const [userName, setUser] = useState('User');\n  const changeUser = event => {\n    setUser(event.target.value);\n  };\n  return (\n    <header> \n      <input type = 'text' value = {userName} onChange = {changeUser}/>\n      <h1>Hello {userName}! This is the project catalog:</h1>\n      <h3>Project {props.number/3} <CustomButton projectNum = {props.number/3}/></h3>\n      <h3>List of Authorized Users: Person A, Person D, Person G</h3>\n      <h2><HardwareSet number = {props.number/3} initsize = {props.initsize} title = {props.title} projectNum = {props.number/3}/></h2>\n      <h2><HardwareSet number = {props.number*2/3} initsize = {props.initsize} title = {props.title} projectNum = {props.number/3}/></h2>\n      <h3>Project {props.number*2/3} <CustomButton projectNum = {props.number*2/3}/></h3>\n      <h3>List of Authorized Users: Person B, Person E, Person H</h3>\n      <h2><HardwareSet number = {props.number*3/3} initsize = {props.initsize} title = {props.title} projectNum = {props.number*2/3}/></h2>\n      <h2><HardwareSet number = {props.number*4/3} initsize = {props.initsize} title = {props.title} projectNum = {props.number*2/3}/></h2>\n      <h3>Project {props.number*3/3} <CustomButton projectNum = {props.number*3/3}/></h3>\n      <h3>List of Authorized Users: Person C, Person F, Person I</h3>\n      <h2><HardwareSet number = {props.number*5/3} initsize = {props.initsize} title = {props.title} projectNum = {props.number*3/3}/></h2>\n      <h2><HardwareSet number = {props.number*6/3} initsize = {props.initsize} title = {props.title} projectNum = {props.number*3/3}/></h2>\n    </header>\n  )\n}\n\n/* <Button>Placeholder Button</Button> (MUI Package was not properly interfacing in recitation) */\n\n/* Passed props from parent to child twice (App passed props to Projects and Projects passed props to HardwareSet)*/\n/*  projectId qty */\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Projects title = 'Enter Qty' number = {3} initsize = {100}/>\n      </header>\n    </div>\n  ); \n}\n\n/*\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Projects title = 'Enter Qty' number = {3} initsize = {100}/>\n        </header>\n      </div>\n    );\n  }\n}\n*/\n\nexport default App;\n",{"ruleId":"21","severity":1,"message":"22","line":20,"column":6,"nodeType":"23","endLine":20,"endColumn":8,"suggestions":"24"},{"ruleId":"21","severity":1,"message":"22","line":69,"column":6,"nodeType":"23","endLine":69,"endColumn":8,"suggestions":"25"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'info'. Either include it or remove the dependency array.","ArrayExpression",["26"],["27"],{"desc":"28","fix":"29"},{"desc":"28","fix":"30"},"Update the dependencies array to be: [info]",{"range":"31","text":"32"},{"range":"33","text":"32"},[970,972],"[info]",[2897,2899]]